#!/usr/bin/env ruby
require "fileutils"
require "cynic"

module Cynic
  class Generator
    attr_accessor :name, :options, :app_name, :dir
    
    def initialize(args)
      @dir, @name, @options = args[1], args[1].gsub("-", "_"), args[2..-1]
      @app_name = @name.gsub(/(?<=[_-]|^|\s)(\w)/){$1.upcase}.gsub(/(?:[_-]|\s)(\w)/,'\1')
    end
    
    
    def make_file(name, &block)
      File.open("#{@dir}/#{name}", "w") do |file|
        block.call(file)
      end
    end
    
    def create_routes
      make_file("config/routes.rb") do |file|
        file.write <<-HEREDOC
Cynic.application.routing.define do |map|
  # map.get "/", to: [HomeController.new, :index]
end
        HEREDOC
      end
      
    end
    
    def create_gemfile
      make_file("Gemfile") do |file|
        file.write <<-HEREDOC
source 'https://rubygems.org'

gem "cynic", "#{Cynic::VERSION}"
        HEREDOC
      end
      
    end
    
    def create_application
      make_file("config/application.rb") do |file|
        file.write  <<-HEREDOC
require 'cynic'
Dir.glob(["./app/**/*.rb"]).each {|file| require file }

module #{@app_name}
  class Application < Cynic::App
    # Your code here
  end
end
        HEREDOC
      end
    end
    
    def create_config
      Dir.mkdir([self.dir, "config"].join("/"))
      make_file("config.ru") do |file|
        file.write <<-HEREDOC
require './config/application'
#{self.name} = #{@app_name}::Application.initialize!
run #{self.name}
        HEREDOC
      end
    end
    
    def create_controller
      make_file("app/controllers/application_controller.rb") do |file|
        file.write <<-HEREDOC
class ApplicationController < Cynic::Controller
  # Application wide methods and before_actions go here
end
        HEREDOC
      end
    end
    
    def create_layout
      Dir.mkdir([self.dir, "app", "views", "layouts"].join("/"))
      make_file("app/views/layouts/application.html.erb") do |file|
        file.write <<-HEREDOC
<!DOCTYPE html>
<head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <title></title>
</head>

<body>
  <%= yield %>  
</body>
        HEREDOC
      end
    end
  end
end

case ARGV[0]
when "new"
  generator = Cynic::Generator.new(ARGV)
  Dir.mkdir(generator.dir)
  Dir.mkdir([generator.dir, "app"].join("/"))
  Dir.mkdir([generator.dir, "app", "controllers"].join("/"))
  Dir.mkdir([generator.dir, "app", "views"].join("/"))
  Dir.mkdir([generator.dir, "app", "models"].join("/"))
  Dir.mkdir([generator.dir, "public"].join("/"))
  Dir.mkdir([generator.dir, "public", "stylesheets"].join("/"))
  Dir.mkdir([generator.dir, "public", "javascripts"].join("/"))
  Dir.mkdir([generator.dir, "public", "images"].join("/"))
  generator.create_config
  generator.create_application
  generator.create_controller
  generator.create_gemfile
  generator.create_routes
  generator.create_layout
when "server"
  `shotgun -p 4545 -s puma`
end

